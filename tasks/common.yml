---

# Compile from git:
# git clone https://github.com/gsliepen/tinc && cd tinc/
# git checkout release-{{ tinc_version }}
# sudo apt-get install gcc autoconf make texinfo libncurses-dev libreadline-dev liblzo2-dev zlib1g-dev libssl-dev
# autoreconf -fis
# ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var
# make

- name: tinc VPN | remove default package
  tags:
  - package
  package:
    name: tinc
    state: absent

- name: tinc VPN | dependencies
  tags:
  - package
  package:
    name: 
      - openssl
      - liblzo2-2
  notify: restart tinc

- name: tinc VPN | binaries
  tags:
  - binary
  copy:
    src: "bin/{{ tinc_version }}/{{ ansible_architecture }}/{{ item }}"
    dest: /usr/sbin/
    mode: 0755
  loop:
    - tinc
    - tincd
  notify: restart tinc

- name: tinc VPN | directory
  tags:
  - dir
  file:
    dest: "{{ tinc_dir }}/hosts"
    state: directory
  notify: restart tinc

- name: tinc VPN | config
  tags:
  - config
  template:
    src: "{{ item }}.j2"
    dest: "{{ tinc_dir }}/{{ item }}"
    mode: 0700
  loop:
    - tinc.conf
    - tinc-up
    - tinc-down
  notify: restart tinc

- name: tinc VPN | private key
  tags:
    - config
    - crypt
  copy:
    src: "{{ tinc_keydir }}/{{ item }}_key.priv"
    dest: "{{ tinc_dir }}"
    mode: 0400
  loop: 
    - rsa
    - ed25519
  notify: restart tinc

- include_tasks: hostconf.yml
  loop: "{{ q('inventory_hostnames', inventory_hostname ~ ':tinc_servers_' ~ tinc_network ) }}"
  loop_control:
    loop_var: host

- name: tinc VPN | systemd-networkd drop-in dir
  file:
    path: "{{ tinc_dropin | dirname }}"
    state: directory

- name: tinc VPN | systemd-networkd config
  tags:
  - config
  template:
    src: "{{ item.src }}.j2"
    dest: "{{ item.dst }}"
  loop:
    - src: vpn.network
      dst: "/etc/systemd/network/20-{{ tinc_network }}.network"
    - src: iptables.conf
      dst: "{{ tinc_dropin }}"
  notify:
    - daemon-reload
    - restart networkd
    - restart tinc

- name: tinc VPN | systemd unit files
  copy:
    src: "{{ item }}"
    dest: /lib/systemd/system/
  loop:
    - tinc.service
    - tinc@.service
  notify: restart tinc

- name: tinc VPN | service
  tags:
  - service
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - tinc
    - "tinc@{{ tinc_network }}"
