#! /bin/sh
# {{ tinc_dir }}/tinc-up
# {{ansible_managed}}
# Link configuration once tun/tap interface is created

tincdir=$(dirname $0)

{% if 'android' in group_names %}
repo="/sdcard/Android/git/tinc/files/Android"

[ -L /sbin/awk ] || sh "$repo/busybox-links"

uhook="/data/local/udhcpc-script.sh"
install -o root -g root -m 755 "$repo/${uhook##*/}" "$uhook"
{% endif %}

# Persistent MAC address
MACfile="$tincdir/mac"
MAC=$(cat "$MACfile" 2>&-)
if [ -z "$MAC" ]; then
  cat /sys/class/net/$INTERFACE/address > "$MACfile"
else
  ip link set $INTERFACE address $MAC
fi

ip link set $INTERFACE up

# Save static routes to VPN servers

tid=100
pri=5000

initRouting() {
  ip ru del pri $pri 2>&-
  ip ru add pri $pri from all lookup $tid
  ip ro flush table $tid
  ip -6 ro flush table $tid
}
initRouting

getroute() {
  ip ro get $1 | \
    head -n 1 | \
    egrep -ow '(dev|via) [[:graph:]]+'
}

saveroute() {
  for ip in $@; do
    old_rt=$(getroute $ip)
    if [ $? -eq 0 ]; then
      echo "Saving route to $ip ($old_rt)"
      ip ro add table $tid $ip $old_rt
    fi
  done
}

vpnhosts() {
  grep 'ConnectTo =' "$tincdir/tinc.conf" | awk '{print $3}' 
}

vpnaddr() {
  while read host; do
    grep 'Address =' "$tincdir/hosts/$host" | awk '{print $3}' 
  done
}

getip() {
  while read host; do
    if [ $( echo "$host" | tr -d '[0-9a-f.:]' ) ]; then
      host -t a $host | awk '/has address/ {i++} i>0 {print $4}'
    else
      echo "$host"
    fi
  done
}

saveroute $(vpnhosts | vpnaddr | getip | sort -u) || true

{% if tinc_use_dhcpcd %}
dhcpcd -bL $INTERFACE
{% elif 'android' in group_names %}
udhcpc -Rb -i $INTERFACE -x hostname:$NAME \
  -s "$uhook" -p /data/local/udhcpc.pid &
{% else %}
# IP configuration in /etc/systemd/network/*.network
{% endif %}
